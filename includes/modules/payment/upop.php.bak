<?php

header ( 'Content-type:text/html;charset=utf-8' );



/**
 * ECSHOP 银联在线支付
 * ============================================================================
 * 版权所有 2005-2010 上海商派网络科技有限公司，并保留所有权利。
 * 网站地址: http://www.ecshop.com；
 * ----------------------------------------------------------------------------
 * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和
 * 使用；不允许对程序代码以任何形式任何目的的再发布。
 * ============================================================================
 * $Author: douqinghua $
 * $Id: upop.php 17063 2010-03-25 06:35:46Z douqinghua $
 */

if (!defined('IN_ECS'))
{   
	die('Hacking attempt');
}


//include_once ($_SERVER ['DOCUMENT_ROOT'] . '/shop/includes/init.php');
include_once (ROOT_PATH . 'includes/upacp/common.php');
include_once (ROOT_PATH . 'includes/upacp/SDKConfig.php');
include_once (ROOT_PATH . 'includes/upacp/secureUtil.php');
include_once (ROOT_PATH. 'includes/upacp/log.class.php');
include_once (ROOT_PATH . 'includes/upacp/httpClient.php');
include_once (ROOT_PATH . 'includes/lib_order.php');




// 包含配置文件
$payment_lang = ROOT_PATH . 'languages/' .$GLOBALS['_CFG']['lang']. 'payment/upop.php';
//$payment_lang = $_SERVER ['DOCUMENT_ROOT']  . 'languages/zh_cn/payment/upop.php';


if (file_exists($payment_lang))
{
    global $_LANG;

    include_once($payment_lang);
}

/* 模块的基本信息 */
if (isset($set_modules) && $set_modules == TRUE)
{
    $i = isset($modules) ? count($modules) : 0;

    /* 代码 */
    $modules[$i]['code']    = basename(__FILE__, '.php');

    /* 描述对应的语言项 */
    $modules[$i]['desc']    = 'upop_desc';

    /* 是否支持货到付款 */
    $modules[$i]['is_cod']  = '0';

    /* 是否支持在线支付 */
    $modules[$i]['is_online']  = '1';

    /* 作者 */
    $modules[$i]['author']  = '乾亨网络工作室';

    /* 网址 */
    $modules[$i]['website'] = 'http://www.unicoicn.com';

    /* 版本号 */
    $modules[$i]['version'] = '1.0.0';

    /* 配置信息 */
    $modules[$i]['config'] = array(
        array('name' => 'upop_merAbbr', 'type' => 'text', 'value' => '商户名称'),
        array('name' => 'upop_account', 'type' => 'text', 'value' => ''),
        array('name' => 'upop_security_key', 'type' => 'text', 'value' => ''),
    );

    return;
}


/**
 * 类
 */
class UPOP
{
	
	/**
	 * 构造函数
	 *
	 * @access  public
	 * @param
	 *
	 * @return void
	 */


    /**
     * 生成支付代码
     * @param   array   $order  订单信息
     * @param   array   $payment    支付方式信息
     */

	  private $merID = array('105290007800029','105290007800030','105290007800034','105290007800035');
	
    function get_code($order, $payment,$agent_type)
    {
    	
        // 初始化变量
        if (!defined('EC_CHARSET'))
        {
            $charset = 'UTF-8';
        }
        else
        {
            $charset = strtoupper(EC_CHARSET);
        }
        
        
        // 初始化日志
        //global $log;
        $log = new PhpLog ( SDK_LOG_FILE_PATH, "PRC", SDK_LOG_LEVEL );
        $log->LogInfo ( "============处理前台请求开始===============" );
        // 初始化日志
        
  
        $orderNumber           = $order['order_sn']  . $this->_formatSN($order['log_id']);	
        
        $isVirtual = exist_virtual_card_goods($order['order_id']);
        $member_id =  SDK_MEMBER_PC_REAL_ID;
        $cert_path = SDK_MEMBER_MOBILE_REAL_ID;
        $frontEndUrl = return_url(basename(__FILE__, '.php'));
        $backEndUrl = return_url(basename(__FILE__, '.php'));
        
        if($agent_type == '07'){
        	if ($isVirtual ){
        		$member_id = SDK_MEMBER_PC_VIRTUAL_ID;
        	  $cert_path = SDK_SIGN_PC_VIRTUAL_PATH;
        	}else{
        	  $member_id =  SDK_MEMBER_PC_REAL_ID;
        	  $cert_path = SDK_SIGN_PC_REAL_PATH;
        	}
        	
        	
        	$params = array(
        		'version' => '5.0.0',				//版本号
        		'encoding' => 'utf-8',				//编码方式
        		'certId' => getSignCertId ( $cert_path ),			//证书ID
        		'txnType' => '01',				//交易类型
        		'txnSubType' => '01',				//交易子类
        		'bizType' => '000201',				//业务类型
        		'frontUrl' =>  $frontEndUrl,  		//前台通知地址
        		'backUrl' =>  $backEndUrl,		//后台通知地址
        		'signMethod' => '01',		//签名方法
        		'channelType' => '07',		//渠道类型，07-PC，08-手机
        		'accessType' => '0',		//接入类型
        		'merId' =>  $member_id,		        //商户代码，请改自己的测试商户号
        		'orderId' => $orderNumber,	//商户订单号
        		'txnTime' => date('YmdHis'),	//订单发送时间
        		'txnAmt' =>  $order['order_amount'] * 100,		//交易金额，单位分
        		//'txnAmt' =>  1,
        		'currencyCode' => '156',	//交易币种
        		'defaultPayType' => '0001',	//默认支付方式
        		//'orderDesc' => '订单描述',  //订单描述，网关支付和wap支付暂时不起作用
        		'reqReserved' =>' 透传信息', //请求方保留域，透传字段，查询、通知、对账文件中均会原样出现
        	);
        	
        }
        else{
        	if ($isVirtual ){
        		$member_id = SDK_MEMBER_MOBILE_VIRTUAL_ID;
        		$cert_path = SDK_SIGN_MOBILE_VIRTUAL_PATH;
        	}else{
        	  $member_id =  SDK_MEMBER_MOBILE_REAL_ID;
        	  $cert_path = SDK_SIGN_MOBILE_REAL_PATH ;
        	
        	}
        	
        	
        	$params = array(
        		'version' => '5.0.0',				//版本号
        		'encoding' => 'utf-8',				//编码方式
        		'certId' => getSignCertId ($cert_path),			//证书ID
        		'txnType' => '01',				//交易类型
        		'txnSubType' => '01',				//交易子类
        		'bizType' => '000201',				//业务类型
        		'frontUrl' =>  $frontEndUrl,  		//前台通知地址
        		'backUrl' =>   $backEndUrl,		//后台通知地址
        		'signMethod' => '01',		//签名方法
        		'channelType' => '08',		//渠道类型，07-PC，08-手机
        		'accessType' => '0',		//接入类型
        		'merId' =>  $member_id,		        //商户代码，请改自己的测试商户号
        		'orderId' => $orderNumber,	//商户订单号
        		'txnTime' => date('YmdHis'),	//订单发送时间
        		'txnAmt' =>  $order['order_amount'] * 100,		//交易金额，单位分
        		//'txnAmt' =>  1,
        		'currencyCode' => '156',	//交易币种
        		'defaultPayType' => '0001',	//默认支付方式
        		//'orderDesc' => '订单描述',  //订单描述，网关支付和wap支付暂时不起作用
        		'reqReserved' =>' 透传信息', //请求方保留域，透传字段，查询、通知、对账文件中均会原样出现
        	);
        
        }
        
        
        
        
        sign ( $params , $cert_path);
        
        
        // 前台请求地址
        $front_uri = SDK_FRONT_TRANS_URL;
        $log->LogInfo ( "前台请求地址为>" . $front_uri );
        // 构造 自动提交的表单
        $button = "<input type='submit' value='银联支付' />";
        $html_form = create_html ( $params, $front_uri ,$button);
        
        $log->LogInfo ( "-------前台交易自动提交表单>--begin----" );
        $log->LogInfo ( $html_form );
        $log->LogInfo ( "-------前台交易自动提交表单>--end-------" );
        $log->LogInfo ( "============处理前台请求 结束===========" );
        return $html_form;
        
        // $params = array(
        //        "version"            =>  '1.0.0',                      //接口版本
        //        "signMethod"         =>  'md5',                        //加密方式
        //        "charset"            =>  $charset,                     //编码
        //        "transType"          =>  '01',                         //交易类型
        //        "origQid"            =>  '',
        //        "merId"              =>  $merId,                       //收款账号
        //        "merAbbr"            =>  $merAbbr,                     //商户名称
        //        "acqCode"            =>  '',
        //        "merCode"            =>  '',
        //        "commodityUrl"       =>  '',                           //商品url
        //        "commodityName"      =>  '',                           //商品名字
        //        "commodityUnitPrice" =>  '',                           //商品单价
        //        "commodityQuantity"  =>  '',                           //商品数量
        //        "commodityDiscount"  =>  '',
        //        "transferFee"        =>  '',
        //        "orderNumber"        =>  $orderNumber,                 //订单号，必须唯一
        //        "orderAmount"        =>  $order['order_amount'] * 100, //交易金额 转化为分
        //        "orderCurrency"      =>  '156',                        //交易币种，CURRENCY_CNY=>人民币
        //        "orderTime"          =>  date('YmdHis'),               //交易时间, YYYYmmhhddHHMMSS
        //        "customerIp"         =>  $_SERVER['REMOTE_ADDR'],      //用户IP
        //        "customerName"       =>  '',
        //        "defaultPayType"     =>  '',
        //        "defaultBankNumber"  =>  '',
        //        "transTimeout"       =>  '',
        //        "frontEndUrl"        =>  $frontEndUrl,                 // 前台回调URL
        //        "backEndUrl"         =>  $backEndUrl,                  // 后台回调URL
        //        "merReserved"        =>  ''             
        // );
        
        // $params['signature']    =$this->sign($params, $security_key,'md5');
        
        // $button = "<input type='submit' value='" . $GLOBALS['_LANG']['upop_button'] . "' />";
        // $html = $this->create_html($params,$front_pay_url,$button);

        // return $html;
        
        // 签名
        
        
    }

    /**
     * 响应操作
     */
    function respond()
    {
            $payment        = get_payment('upop');

            //$arr_args = array();
            //$arr_reserved = array();

            //print ("This is start");
            
            if (is_array($_POST)) 
            {
                $arr_args       = $_POST;
                //$cupReserved    = isset($arr_args['cupReserved']) ? $arr_args['cupReserved'] : '';
                //parse_str(substr($cupReserved, 1, -1), $arr_reserved); //去掉前后的{}
            }
            /*
            else 
            {
                $cupReserved = '';
                $pattern = '/cupReserved=(\{.*?\})/';
                if (preg_match($pattern, $_POST, $match)) { //先提取cupReserved
                   $cupReserved = $match[1];
                }
                //将cupReserved的value清除(因为含有&, parse_str没法正常处理)
                $args_r         = preg_replace($pattern, 'cupReserved=', $_POST);
                parse_str($args_r, $arr_args);
                $arr_args['cupReserved'] = $cupReserved;
                parse_str(substr($cupReserved, 1, -1), $arr_reserved); //去掉前后的{}
            }
            */
           
            
            //提取服务器端的签名
            
            if (!isset($arr_args['signature']) )
            {
            	return false;
            }
     		//print("signature".$arr_args['signature']."\n");
            //验证签名
            //$signature=$this->sign($arr_args, $payment['upop_security_key'],'md5');
            if (!(verify ( $arr_args ))) 
            {
                return false;
            }

            //$arr_ret = array_merge($arr_args, $arr_reserved);
            //unset($arr_ret['cupReserved']);

            if ($arr_args['respCode'] != '00') 
            {
                return false;
            }
            /*
            if(!strpos($arr_ret['orderNumber'], '-')) 
            {
                return false;
            }
            */
            $order_sn_arr = $arr_args['orderId'];
            
            $order_sn    = substr($order_sn_arr, 0,13);
            //print ("order_sn".$order_sn."\n");
            $pay_id = intval(substr($order_sn_arr, 14));
            //print ("pay_id".$pay_id."\n");
            $payment_amount = intval($arr_args['txnAmt']);
            //print ("payment_amount".$payment_amount."\n");
          
            // 检查商户账号是否一致。
            if (_computeMer($arr_args['merId']) == 4)
            {
              return false;
            }
            //检查价格是否一致
            if (!check_money($pay_id, $payment_amount/100))
            {
               
               return false;
            }
            // 如果未支付成功。
            if ($arr_args['respCode'] != '00')
            {
               return false;
            }

            $action_note = $arr_args['respCode'] . ':' 
                    . $arr_args['respMsg'] 
                    . $GLOBALS['_LANG']['upop_txn_id'] . ':' 
                    . $arr_args['queryId'];

            // 完成订单。
            order_paid($pay_id, PS_PAYED, $action_note);

            //告诉用户交易完成
            return true;
			
    }
    /**
    * 格式订单号
    */
    function _formatSN($sn)
    {
        return str_repeat('0', 9 - strlen($sn)) . $sn;
    }
    
    /**
    *　计算商户号
    */
     function _computeMer($merID)
    {
        $val = 0;
        if (SDK_MEMBER_MOBILE_REAL_ID != $merID)
        {
        	$val = $val + 1;	
        }
        
        if (SDK_MEMBER_MOBILE_VIRTUAL_ID  != $merID)
        {
        	$val = $val + 1;	
        }
        
         if (SDK_MEMBER_PC_VIRTUAL_ID != $merID)
        {
        	$val = $val + 1;	
        }
        
         if ( SDK_MEMBER_PC_REAL_ID != $merID)
        {
        	$val = $val + 1;	
        }
        
        return $val;
        
        
    }
    
    
    /*
    function create_html($params,$front_pay_url,$button)
    {
        $html = <<<eot
    <br />
    <form style="text-align:center;" id="pay_form" name="pay_form" action="{$front_pay_url}" method="post" target="_blank">
 eot;
        foreach ($params as $key => $value) 
        {
            $html .= " <input type=\"hidden\" name=\"{$key}\" id=\"{$key}\" value=\"{$value}\" />\n";
        }
        $html .= $button . "</form><br />";
        
        echo  $html;
    }
   
    */
    /*
    function sign($params,$security_key,$sign_method)
    {
        if (strtolower($sign_method) == "md5") 
        {
            ksort($params);
            $sign_str = "";
            $sign_ignore_params=array('bank','signMethod','signature');
            foreach ($params as $key => $val)
            {
                if (in_array($key,$sign_ignore_params)) 
                {
                    continue;
                }
                $sign_str .= sprintf("%s=%s&", $key, $val);
            }
            return md5($sign_str . md5($security_key));
        }
        else 
        {
            exit("Unknown sign_method set in quickpay_conf");
        }
    }
	*/
}
?>